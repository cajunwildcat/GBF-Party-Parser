name: Update Data Daily

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight every day
  workflow_dispatch:

jobs:
  update_data:
    runs-on: ubuntu-22.04
    permissions: write-all
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Run Script to Download Data
        env:
          USER_AGENT: ${{ secrets.USER_AGENT }}
        run: |
          #!/usr/bin/env bash
          TEMP_FILE="$(mktemp)"
          SUMMONS_FILE="summons.json"
          MIN_SUMMONS_FILE="summons-min.json"
          CHARACTERS_FILE="characters.json"
          MIN_CHARACTERS_FILE="characters-min.json"
          WEAPONS_FILE="weapons.json"
          MIN_WEAPONS_FILE="weapons-min.json"
          ABILITIES_FILE="abilities.json"
          SUMMONS_URL="https://gbf.wiki/index.php?title=Special:CargoExport&format=json&limit=5000&tables=summons&fields=id%2C_pageName%3DpageName%2Cname%2Cevo_max%3DmaxUncap%2Crarity%2Celement&formatversion=2"
          CHARACTERS_URL="https://gbf.wiki/index.php?title=Special:CargoExport&format=json&limit=5000&tables=characters&fields=_pageName%3DpageName%2Cid%2Cseries%2Cstyle_name%3DstyleName%2Cstyle_id%3DstyleId%2Cjpname%2Cname%2Crelease_date%3DreleaseDate%2Cgender%2Cobtain%2C5star_date%3DflbDate%2Cmax_evo%3DmaxUncap%2Cexpedition_type%3DexpeditionType%2Crarity%2Celement%2Ctype%2Ccustomtype%2Crace%2Cjoin_weapon%3DrecruitWeapon%2Cweapon&formatversion=2"
          WEAPONS_URL="https://gbf.wiki/index.php?title=Special:CargoExport&format=json&limit=5000&tables=weapons&fields=id%2C_pageName%3DpageName%2Cevo_max%3DmaxUncap%2Crarity%2Cseries%2Celement%2Cs1_icon%2Cs2_icon%2Cs3_icon%2Ctype%2Cawakening%2Cawakening_type1%3DawakeningType1%2Cawakening_type2%3DawakeningType2&formatversion=2"
          ABILITIES_URL="https://gbf.wiki/index.php?title=Special:CargoExport&format=json&limit=5000&tables=class_skill&fields=icon%2Cname%2C&formatversion=2"

          #summons
          SUMMON_JQ_QUERY="map({ (.id | tostring): {pageName: (.pageName | gsub(\"&#039;\"; \"'\")), name: (.name | gsub(\"&#039;\"; \"'\")), maxUncap, rarity, element} }) | add"
          MIN_SUMMON_JQ_QUERY="map({ (.id | tostring): {pageName: (.pageName | gsub(\"&#039;\"; \"'\")), name: (.name | gsub(\"&#039;\"; \"'\")), maxUncap} }) | add"
          curl -A "$USER_AGENT" -fsSL "$SUMMONS_URL" > "$TEMP_FILE"
          jq "$SUMMON_JQ_QUERY" "$TEMP_FILE" > "$SUMMONS_FILE"
          jq "$MIN_SUMMON_JQ_QUERY" "$TEMP_FILE" > "$MIN_SUMMONS_FILE"

          #characters
          CHARACTER_JQ_QUERY="map({ (.id | tostring): {pageName: (.pageName | gsub(\"&#039;\"; \"'\")), maxUncap, rarity, element, series, styleName, styleId, jpname, releaseDate, gender, obtain, flbDate, expeditionType, type, customType, race, recruitWeapon: (if .recruitWeapon then (.recruitWeapon | gsub(\"&#039;\"; \"'\")) else null end), weapon} }) | add"
          MIN_CHARACTER_JQ_QUERY="map({ (.id | tostring): {pageName: (.pageName | gsub(\"&#039;\"; \"'\"))} }) | add"
          curl -A "$USER_AGENT" -fsSL "$CHARACTERS_URL" > "$TEMP_FILE"
          jq "$CHARACTER_JQ_QUERY" "$TEMP_FILE" > "$CHARACTERS_FILE"
          jq "$MIN_CHARACTER_JQ_QUERY" "$TEMP_FILE" > "$MIN_CHARACTERS_FILE"

          #weapons
          WEAPON_JQ_QUERY="map({ (.id | tostring): {pageName: (.pageName | gsub(\"&#039;\"; \"'\")), maxUncap, rarity, series, element, \"s1 icon\", \"s2 icon\", \"s3 icon\", type, awakening, awakeningType1, awakeningType2} }) | add"
          MIN_WEAPON_JQ_QUERY="map({ (.id | tostring): {maxUncap} }) | add"
          curl -A "$USER_AGENT" -fsSL "$WEAPONS_URL" > "$TEMP_FILE"
          jq "$WEAPON_JQ_QUERY" "$TEMP_FILE" > "$WEAPONS_FILE"
          jq "$MIN_WEAPON_JQ_QUERY" "$TEMP_FILE" > "$MIN_WEAPONS_FILE"

          #abilities
          ABILITIES_JQ_QUERY="map({ (.name | gsub(\"&#039;\"; \"'\")): {icon, name: (.name | gsub(\"&#039;\"; \"'\"))} }) | add"
          curl -A "$USER_AGENT" -fsSL "$ABILITIES_URL" > "$TEMP_FILE"
          jq "$ABILITIES_JQ_QUERY" "$TEMP_FILE" > "$ABILITIES_FILE"

      - name: Check for Changes
        id: check_changes
        run: |
          git fetch
          if [[ -n $(git status --porcelain) ]]; then
            echo "Changes detected, proceeding with commit and push."
            echo "::set-output name=has_changes::true"
          else
            echo "No changes detected, exiting without pushing."
            echo "::set-output name=has_changes::false"
            exit 0
          fi

      - name: Commit and Push Changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git add .
          git commit -m "Automated data update"
          git push origin main
